plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0' apply false
    id 'io.spring.dependency-management' version '1.1.4' apply false
}

allprojects {
    group = 'ai.rpg'
    version = '0.1.0-SNAPSHOT'
    
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java'
    
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }
    
    dependencies {
        // Common dependencies for all modules
        compileOnly 'org.springframework:spring-context'
        
        // Logging
        implementation 'org.slf4j:slf4j-api'
        
        // Testing
        testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
        testImplementation 'org.assertj:assertj-core:3.24.2'
        testImplementation 'org.mockito:mockito-core:5.7.0'
        testImplementation 'org.mockito:mockito-junit-jupiter:5.7.0'
    }
    
    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    }
    
    // Enforce code quality
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.deprecation = true
        options.compilerArgs += ['-Xlint:unchecked', '-Xlint:deprecation']
    }
}

// Integration testing task
task integrationTest {
    description = 'Runs integration tests across all modules'
    group = 'verification'
    
    dependsOn subprojects.collect { ":${it.name}:test" }
}

// Code quality task
task qualityCheck {
    description = 'Runs code quality checks across all modules'
    group = 'verification'
    
    dependsOn subprojects.collect { ":${it.name}:test" }
}

// Documentation task
task generateDocs {
    description = 'Generates documentation for all modules'
    group = 'documentation'
    
    doLast {
        println "Documentation generation would go here..."
        println "Modules: ${subprojects.collect { it.name }}"
    }
}
