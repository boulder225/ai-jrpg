# AI RPG MVP Configuration
# This file contains all configuration for the Java implementation

# Server Configuration
server:
  port: 8080
  shutdown: graceful
  tomcat:
    connection-timeout: 20000
    keep-alive-timeout: 15000

# Spring Configuration
spring:
  application:
    name: ai-rpg-mvp
  
  # Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/rpgdb
    username: rpguser
    password: rpgpass
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
  
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.hibernate.boot.model.naming.SnakeCasePhysicalNamingStrategy
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true
  
  # Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379
      timeout: 2000ms
      jedis:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
  
  # Cache Configuration
  cache:
    type: redis
    redis:
      time-to-live: 1800000 # 30 minutes
      cache-null-values: false

# AI Configuration
ai:
  claude:
    api-key: ${CLAUDE_API_KEY:}
    model: claude-3-sonnet-20240229
    max-tokens: 1000
    temperature: 0.7
    timeout: 30s
    max-retries: 3
    
  openai:
    api-key: ${OPENAI_API_KEY:}
    model: gpt-4
    max-tokens: 1000
    temperature: 0.7
    timeout: 30s
    max-retries: 3

# Context Management Configuration
context:
  max-actions: 50
  cache-timeout: 30m
  persist-interval: 5m
  cleanup-interval: 6h
  max-context-age: 30d

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      claude:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 30s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        
  ratelimiter:
    instances:
      claude:
        limitForPeriod: 10
        limitRefreshPeriod: 1m
        timeoutDuration: 5s
        registerHealthIndicator: true
        
  retry:
    instances:
      claude:
        maxAttempts: 3
        waitDuration: 1s
        exponentialBackoffMultiplier: 2
        enableExponentialBackoff: true

# Logging Configuration
logging:
  level:
    ai.rpg: DEBUG
    org.springframework.web: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# Management and Monitoring
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true

# Custom Application Properties
app:
  name: AI RPG MVP
  version: 0.1.0-SNAPSHOT
  description: "AI-powered RPG with context tracking and autonomous agents"
